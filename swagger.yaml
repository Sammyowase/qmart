openapi: 3.0.3
info:
  title: Qmart Fintech API
  description: |
    A comprehensive fintech backend API for QR code-based payment transactions.
    
    ## Architecture Overview
    - Customer Authentication: Direct signup with immediate wallet creation
    - Merchant Authentication: Two-step process (signup → business info → wallet)
    - Shared Authentication: OTP verification and password reset
    
    ## Rate Limiting
    - General Endpoints: 100 requests per 15 minutes per IP
    - Authentication Endpoints: 5 requests per 15 minutes per IP
  version: 1.0.0
  contact:
    name: Qmart API Support
    email: support@qmart.com

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://api.qmart.com
    description: Production server	

tags:
  - name: Health & Info
  - name: Customer Authentication
  - name: Merchant Authentication
  - name: Shared Authentication

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: token

  schemas:
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        message:
          type: string

paths:
  /health:
    get:
      tags: [Health & Info]
      summary: Health check endpoint
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              example:
                status: success
                message: Qmart API is running
                timestamp: 2024-06-08T21:47:06.935Z

  /api:
    get:
      tags: [Health & Info]
      summary: API information
      responses:
        '200':
          description: API information
          content:
            application/json:
              example:
                message: Welcome to Qmart Fintech API
                version: 1.0.0
                architecture:
                  customerAuth: /api/auth/customer
                  merchantAuth: /api/auth/merchant
                  sharedAuth: /api/auth

  /api/auth/customer/signup:
    post:
      tags: [Customer Authentication]
      summary: Register a new customer
      description: |
        Creates customer account with immediate wallet creation.
        Sends email OTP for verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, firstName, lastName, phone]
              properties:
                email:
                  type: string
                  format: email
                  example: customer@test.com
                password:
                  type: string
                  minLength: 6
                  example: password123
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phone:
                  type: string
                  example: +1234567890
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              example:
                status: success
                message: Customer account created successfully
                data:
                  user:
                    id: 507f1f77bcf86cd799439011
                    email: customer@test.com
                    role: customer
                  wallet:
                    accountNumber: 123456789
                    balance: 0.00

  /api/auth/customer/signin:
    post:
      tags: [Customer Authentication]
      summary: Customer sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: customer@test.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Sign in successful
          content:
            application/json:
              example:
                status: success
                message: Signin successful
                data:
                  user:
                    id: 507f1f77bcf86cd799439011
                    email: customer@test.com
                    role: customer
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  /api/auth/merchant/signup:
    post:
      tags: [Merchant Authentication]
      summary: Register a new merchant
      description: Step 1 of merchant registration. Business info required after verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, firstName, lastName, phone]
              properties:
                email:
                  type: string
                  format: email
                  example: merchant@test.com
                password:
                  type: string
                  minLength: 6
                  example: password123
                firstName:
                  type: string
                  example: Jane
                lastName:
                  type: string
                  example: Smith
                phone:
                  type: string
                  example: +1234567891
      responses:
        '201':
          description: Merchant created successfully
          content:
            application/json:
              example:
                status: success
                message: Merchant account created successfully

  /api/auth/merchant/signin:
    post:
      tags: [Merchant Authentication]
      summary: Merchant sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: merchant@test.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Sign in successful
          content:
            application/json:
              example:
                status: success
                message: Signin successful
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  /api/auth/merchant/business-info:
    post:
      tags: [Merchant Authentication]
      summary: Complete merchant business information
      description: Step 2 of merchant registration. Creates wallet after completion.
      security:
        - BearerAuth: []
        - CookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, businessName, businessType, businessAddress, cacNumber]
              properties:
                userId:
                  type: string
                  example: 
                businessName:
                  type: string
                  example: Jane's Store
                businessType:
                  type: string
                  enum: [retail, restaurant, service, online, other]
                  example: retail
                businessAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 123 Main Street
                    city:
                      type: string
                      example: Lagos
                    state:
                      type: string
                      example: Lagos
                    zipCode:
                      type: string
                      example: 100001
                    country:
                      type: string
                      example: Nigeria
                cacNumber:
                  type: string
                  example: 1234567890
                aboutBusiness:
                  type: string
                  example: We sell fresh produce and groceries.
      responses:
        '200':
          description: Business information added successfully
          content:
            application/json:
              example:
                status: success
                message: Business information added successfully
                data:
                  wallet:
                    accountNumber: 987654321
                    balance: 0.00

  /api/auth/verify-otp:
    post:
      tags: [Shared Authentication]
      summary: Verify email OTP
      description: Verifies 6-digit OTP sent to email (15-minute expiration)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp]
              properties:
                email:
                  type: string
                  format: email
                  example: user@test.com
                otp:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: 123456
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              example:
                status: success
                message: Email verified successfully

  /api/auth/forgot-password:
    post:
      tags: [Shared Authentication]
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: user@test.com
      responses:
        '200':
          description: Password reset OTP sent
          content:
            application/json:
              example:
                status: success
                message: Password reset OTP sent to your email

  /api/auth/reset-password:
    post:
      tags: [Shared Authentication]
      summary: Reset password with OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp, newPassword]
              properties:
                email:
                  type: string
                  format: email
                  example: user@test.com
                otp:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: 123456
                newPassword:
                  type: string
                  minLength: 6
                  example: newpassword123
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              example:
                status: success
                message: Password reset successfully

  /api/auth/signout:
    post:
      tags: [Shared Authentication]
      summary: Sign out user
      description: Clears JWT token cookie and invalidates session
      responses:
        '200':
          description: Sign out successful
          content:
            application/json:
              example:
                status: success
                message: Signout successful
